@use "sass:math";
@import "../../styles/base";

.milestone {
  $line-width: 2px;
  $line-gutter: map-get($spacers, 4);
  $dot-width: 8px;
  .timeline-container {
    @include media-breakpoint-between(md, lg) {
      max-width: px2rem(500px);
    }
  }
  .timeline-item-wrapper {
    &:last-child:not(.d-none) {
      padding-bottom: 0 if($enable-important-utilities, !important, null);
    }
    .line {
      position: absolute;
      top: 0;
      width: $line-width;
      margin: 0 $line-gutter;
      height: 100%;
      z-index: 1;
      &::after {
        display: block;
        content: '';
        width: 100%;
        height: 100%;
        background-color: currentColor;
        opacity: .2;
      }
    }
    &.left .line {
      left: -1 * (rem2px($line-gutter) + math.div($line-width, 2));
      @include media-breakpoint-down(lg) {
        left: 0;
      }
    }
    &.right .line {
      right: -1 * (rem2px($line-gutter) + math.div($line-width, 2));
      @include media-breakpoint-down(lg) {
        right: 0;
      }
    }
  }
  .timeline-container--image {
    .timeline-content {
      &:last-child {
        margin-top: px2rem(136px);
        @include media-breakpoint-down(lg) {
          margin-top: 0;
        }
      }
    }
  }
  .timeline-content {
    flex: 1;
  }
  .timeline-item {
    position: relative;
    z-index: 2;
  }

  .dot {
    position: absolute;
    top: 0;
    height: 100%;
    width: $dot-width;
    height: $dot-width;
    border-radius: 50%;
    background-color: currentColor;
    &.left {
      left: 0;
      transform: translateX(-50%);
      @include media-breakpoint-down(lg) {
        left: rem2px($line-gutter) + math.div($line-width, 2);
      }
    }
    &.right {
      right: 0;
      transform: translateX(50%);
      @include media-breakpoint-down(lg) {
        right: rem2px($line-gutter) + math.div($line-width, 2);
      }
    }
  }
  .time.overlay-on-line {
    position: absolute;
    &.left {
      left: 0;
      transform: translateX(-50%);
      @include media-breakpoint-down(lg) {
        left: rem2px($line-gutter) + math.div($line-width, 2);
      }
    }
    &.right {
      right: 0;
      transform: translateX(50%);
      @include media-breakpoint-down(lg) {
        right: rem2px($line-gutter) + math.div($line-width, 2);
      }
    }
  }
  // 动效
  @if $enable-animation {
    .dot,
    .time-content {
      opacity: 0;
      transition: opacity $animation-opacity-duration $animation-opacity-timing-function;
      will-change: opacity;
    }
    .time-content {
      transition-delay: .1s;
    }
    .text-content {
      transform: translateY($animation-transform-distance);
      opacity: 0;
      transition: transform $animation-transform-duration $animation-transform-timing-function, opacity $animation-opacity-duration $animation-opacity-timing-function;
      will-change: opacity, transform;
    }
    .animated {
      .time-content,
      .dot {
        opacity: 1;
      }
      .text-content {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }

  .richtext-with-link {
    opacity: .8;
  }
  .img-wrapper {
    max-width: px2rem(400px);
    @include media-breakpoint-down(md) {
      max-width: px2rem(240px);
    }
  }
}