@use "sass:math";

@import "../../styles/base";
@import "../../styles/slider-mixins";

.image-sliders {
  // @import "../../../node_modules/swiper/swiper";
  @import "../../../swiper/swiper.scss";
  $image-slider-transition-duration: .3s;
  $image-slider-transition-timing-function: ease;
  $image-slider-mob-width: math.div(327px, 375px) * 100vw;
  $image-slider-desktop-gap: var(--#{$prefix}spacer-4);
  $image-slider-mob-gap: var(--#{$prefix}spacer-3);

  .swiper {
    overflow: visible;

    .swiper-slide {
      margin-right: $image-slider-desktop-gap;
      transition: opacity $image-slider-transition-duration $image-slider-transition-timing-function;
      will-change: opacity;
      opacity: .4;

      &:last-child {
        margin-right: 0;
      }

      @include media-breakpoint-down(lg) {
        margin-right: $image-slider-mob-gap;
      }
    }

    &.swiper-fullpage {
      @each $breakpoint, $container-max-width in $container-max-widths {
        @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
          @if $breakpoint == sm or $breakpoint == xs {
            max-width: $image-slider-mob-width;
          }

          @else {
            $max-width: $container-max-width - rem2px(map-get($containers-padding-x, $breakpoint) * 2);
            --max-width: #{$max-width};

            max-width: var(--max-width);
          }
        }
      }
    }

    &.swiper-rightwards {
      @each $breakpoint, $container-max-width in $container-max-widths {
        @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
          @if $breakpoint == sm or $breakpoint == xs {
            margin-left: 0;
            max-width: auto;
          }

          @else {
            $max-width: $container-max-width - rem2px(map-get($containers-padding-x, $breakpoint) * 2);
            --max-width: #{$max-width};

            max-width: var(--max-width);
            margin-left: auto;
          }
        }
      }

      .swiper-slide {
        @include media-breakpoint-down(md) {
          max-width: $image-slider-mob-width;
        }
      }
    }
  }

  .swiper-slide-active {
    opacity: 1;
  }

  // 指示器
  .swiper-indicator {
    position: relative;
    margin-right: map-get($spacers, 2);
    width: 2rem;
    height: 2rem;
    cursor: pointer;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      margin: auto;
      width: 100%;
      height: 2px;
      opacity: .2;
      background-color: currentColor;
      transition: opacity $image-slider-transition-duration $image-slider-transition-timing-function;
      will-change: opacity;
    }

    @include not-touch-device {
      &:hover {
        &::before {
          opacity: .4;
        }
      }
    }

    @include media-breakpoint-down(md) {
      width: 1.5rem;
    }
  }

  .swiper-indicator-active::before {
    opacity: 1;
  }

  // 箭头
  .swiper-indicator-prev,
  .swiper-indicator-next {
    @include render-indicator;
  }

  // 文案
  .carousel-desc-container {
    &.not-initialized {
      display: flex;

      .carousel-desc-item {
        flex: 1 0 100%;
      }
    }

    &:not(.not-initialized) {
      .carousel-desc-item {
        transition: opacity $image-slider-transition-duration $image-slider-transition-timing-function;
        opacity: 0;

        &.active {
          position: relative;
          width: 100%;
          opacity: 1;
          z-index: 1;
        }

        &:not(.active) {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          z-index: -1;
        }
      }
    }
  }
}
